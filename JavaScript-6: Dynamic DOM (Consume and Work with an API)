Sure, here are the problem statements along with the solutions:

**Q1. DOM Q6: Movie Filter**

Problem:
Write a script using JavaScript to make the filter work. The filter has 4 categories: none, Action, Romance, Comedy. Each movie card is a div with an h3 and p element. The p element has a data-category attribute that holds the information about the category of the movie. Use the value of this data-category attribute to filter the movies based on the selected category from the drop-down menu.

Solution:

```html
<!-- HTML code -->
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        /* CSS styles */
        /* Styles remain the same */
    </style>
</head>

<body>
    <!-- HTML code remains the same -->
</body>

<script>
    // JavaScript code
    // Select the dropdown menu element
    const select = document.querySelector('select');

    // Add an event listener for the 'change' event on the dropdown menu
    select.addEventListener('change', function () {

        // Get the value of the selected category from the dropdown menu
        const selectedCategory = this.value;

        // Select all movie cards
        const movies = document.querySelectorAll('.movies');

        // Iterate over each movie card
        movies.forEach(movie => {

            // Get the category of the current movie card
            const category = movie.querySelector('.price').getAttribute('data-category');

            // Check if the selected category matches the category of the current movie card
            if (selectedCategory === 'none' || selectedCategory === category) {

                // Display the movie card
                movie.style.display = 'block';
            } else {
                // Hide the movie card
                movie.style.display = 'none';
            }
        });
    });
</script>

</html>
```

**Q2. DOM Q9: Fix the alert**

Problem:
The given JS code is broken. Even when the yellow box is clicked, it is alerted that the red box is clicked. Fix the code such that:
1. It alerts as 'yellow is clicked' when the yellow box is clicked.
2. and alerts as 'red is clicked' when the red box is clicked.
3. A single alert is generated when any of the boxes is clicked.

Solution:

```html
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        /* CSS styles */
        /* Styles remain the same */
    </style>
</head>

<body>
    <!-- HTML code remains the same -->
</body>

<script>
    // JavaScript code
    // Select both red and yellow elements
    let red = document.querySelector(".red");
    let yellow = document.querySelector(".yellow");

    // Add click event listener to red box
    red.addEventListener('click', (e) => {
        // Prevent the click event from bubbling up to the parent elements
        e.stopPropagation();
        window.alert('red is clicked');
    })

    // Add click event listener to yellow box
    yellow.addEventListener('click', (e) => {
        // Prevent the click event from bubbling up to the parent elements
        e.stopPropagation();
        window.alert('yellow is clicked');
    })
</script>

</html>
```

**Additional Problem: Q1. DOM Q10: Delete Buttons**

Problem:
In the HTML provided, there is a list with every item containing an individual delete button and a remove all button on top of the list. Write a JavaScript program that performs the following tasks:
1. Make all the individual delete buttons work. Set the list item's (li element) display style property as 'none'.
2. Make the Remove All button work. Set the entire list's (ul element) display style property as 'none'.

Solution:

```html
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
</head>

<body>
    <button id="all">Remove All</button>
    <ul>
        <li>
            <p>Task - 1</p>
            <button class="delete-btn">delete</button> <!-- Add the class "delete-btn" here -->
        </li>
        <li>
            <p>Task - 2</p>
            <button class="delete-btn">delete</button> <!-- Add the class "delete-btn" here -->
        </li>
        <li>
            <p>Task - 3</p>
            <button class="delete-btn">delete</button> <!-- Add the class "delete-btn" here -->
        </li>
        <li>
            <p>Task - 4</p>
            <button class="delete-btn">delete</button> <!-- Add the class "delete-btn" here -->
        </li>
    </ul>
    <script>
        // JavaScript code
        // Select all delete buttons
        const deleteButtons = document.querySelectorAll('.delete-btn');

        // Add event listeners to delete buttons
        deleteButtons.forEach(button => {
            button.addEventListener('click', () => {
                // Hide the corresponding list item when delete button is clicked
                button.parentNode.style.display = 'none';
            });
        });

        // Select the Remove All button
        const removeAllButton = document.getElementById('all');

        // Add event listener to Remove All button
        removeAllButton.addEventListener('click', () => {
            // Hide the entire list when Remove All button is clicked
            document.querySelector('ul').style.display = 'none';
        });
    </script>
</body>

</html>
```
